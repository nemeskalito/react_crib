export const Bundlers = () => {
	return (
		<>
			<h1>Сборщики. Vite VS Webpack</h1>
			<h3>Что такое сборщик и зачем он нужен?</h3>
			<p>
				Когда ты пишешь код на React, TypeScript, Sass, браузер не понимает эти
				файлы напрямую. Сборщик берёт твой код, трансформирует его (JSX → JS, TS
				→ JS, SCSS → CSS), объединяет в оптимизированные файлы и отдаёт
				браузеру.
			</p>
			<h4>Задачи сборщика:</h4>
			<p>
				Компиляция современного JS в код, который понимают браузеры. Объединение
				(bundling) файлов в один. Подключение CSS, изображений, шрифтов.
				Автоматическое обновление при изменении кода (hot reload). Два самых
				популярных инструмента для этого – Webpack и Vite. Давай разберём их.
			</p>
			<h3>Webpack vs Vite – в чём разница?</h3>
			<h4>Как работает Webpack?</h4>
			<ul>
				<li>- Читает файл index.js – это точка входа.</li>
				<li>- Строит граф зависимостей (какие файлы друг от друга зависят).</li>
				<li>- Собирает всё в один или несколько файлов (bundle.js).</li>
				<li>- Запускает сервер, обновляя страницу при каждом изменении.</li>
				<strong>Проблема</strong>: Webpack сначала собирает весь проект, а потом
				раздаёт его браузеру. Это долго.
			</ul>
			<h4>Как работает Vite?</h4>
			<ul>
				<li>
					- Использует ES-модули (import/export), которые браузер загружает по
					мере необходимости.
				</li>
				<li>
					- Не собирает весь проект заранее – он загружает только то, что нужно
					прямо сейчас.
				</li>
				<li>- При изменении файла обновляет только его, а не весь проект.</li>
				<strong>Результат</strong>: Vite запускает проект почти мгновенно,
				потому что не делает лишней работы.
			</ul>
			<table>
				<tbody>
					<tr>
						<th>Webpack</th>
						<th>Vite</th>
					</tr>
					<tr>
						<td>Подходит для крупных, сложных проектов.</td>
						<td>Подходит для быстрого старта, средних и небольших проектов.</td>
					</tr>
					<tr>
						<td>Долгая первая сборка (особенно в create-react-app).</td>
						<td>Почти мгновенный запуск (благодаря ESM).</td>
					</tr>
					<tr>
						<td>Требует настройки для TypeScript, SCSS, SVG.</td>
						<td>Все популярные технологии поддерживаются "из коробки".</td>
					</tr>
					<tr>
						<td>Обновляет страницу (Live Reload) при изменениях.</td>
						<td>Обновляет только изменённые части (Hot Module Replacement).</td>
					</tr>
					<tr>
						<td>Гибкость: можно подключать плагины, изменять конфигурацию.</td>
						<td>Конфигурация проще, но чуть менее гибкая.</td>
					</tr>
					<tr>
						<td>Хорошо работает с большими проектами и SSR.</td>
						<td>Идеален для маленьких и средних SPA.</td>
					</tr>
				</tbody>
			</table>
			<span>
				<strong>Webpack</strong> = гибкость, но сложнее и медленнее. <br />
				<strong>Vite</strong> = супербыстрый, но пока не так универсален.
			</span>
		</>
	)
}
